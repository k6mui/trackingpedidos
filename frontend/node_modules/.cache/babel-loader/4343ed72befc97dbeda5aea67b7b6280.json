{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javie\\\\Documents\\\\UNI\\\\Proyecto-TRACKING DE PEDIDOS\\\\trackingpedidos\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Barra from \"./Barra.js\";\nimport Pedidos from \"./Pedidos\";\nimport Productos from \"./Productos\";\nimport Detalle from \"./Detalle\";\nimport Transportista from \"./Transportista\";\nimport Login from \"./Login\";\nimport Historial from \"./Historial\";\nimport Resena from \"./Resena\";\nimport Admin from \"./Admin\";\nimport Actualizar from \"./Actualizar\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './css/App.css';\nimport { mockdata } from \"./constants/productos\";\nimport CONFIG from \"./config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USE_SERVER = CONFIG.use_server;\n\nfunction App() {\n  _s();\n\n  // Estado donde almacenamos los productos referidos a un usuario.\n  const [productos, setProductos] = useState();\n  let ejemplo = [{\n    \"id\": 1,\n    \"latitud\": 80,\n    \"longitud\": 40,\n    \"matricula\": \"2341AAA\"\n  }, {\n    \"id\": 2,\n    \"latitud\": 70,\n    \"longitud\": 40,\n    \"matricula\": \"2341AAA\"\n  }, {\n    \"id\": 3,\n    \"latitud\": 60,\n    \"longitud\": 40,\n    \"matricula\": \"2341AAA\"\n  }]; // Estado donde almacenamos los productos referidos a un usuario.\n\n  const [ubicaciones, setUbicaciones] = useState(ejemplo); // Estado utilizado para mostar la pagina login en la ruta por defecto.\n\n  const [login, setLogin] = useState(true); // Estados referidos al nombre del usuario y al rol que tiene dentro de la App.\n\n  const [email, setEmail] = useState('');\n  const [rol, setRol] = useState(''); // Estado utilizado para la introducción de nuevos pedidos por parte de la empresa.\n\n  const [actualizar, setActualizar] = useState({\n    pedido: \"\",\n    nombre: \"\",\n    descripcion: \"\",\n    cliente: \"\",\n    transportista: \"\"\n  }); // Estado utilizado para mostrar si un archivo se ha subido al introducir pedidos por la empresa.\n\n  const [subido, setSubido] = useState(false); // Estado utilizado para enviar los pedidos de un archivo.\n\n  const [jsonData, setJsonData] = useState(null); // Variable que tiene la localización donde nos encontramos, se utiliza principalmente para saber nuestra ruta actual.\n\n  let location = useLocation(); // Funcion para realizar un fetch a los pedidos y guardarlos en el estado productos.\n\n  const download = async objeto => {\n    if (USE_SERVER) {\n      try {\n        const res = await fetch(\"http://localhost:8080\" + location.pathname);\n        const data = await res.json();\n        objeto === \"productos\" ? setProductos(data) : setUbicaciones(data);\n      } catch (e) {\n        console.log(\"No se ha podido recuperar.\");\n      }\n    } else {\n      setProductos(mockdata.productos);\n    }\n  }; // Hook que ejecuta la funcion download() al quitarse el login.\n\n\n  useEffect(() => {\n    async function fetchData() {\n      await download(\"productos\");\n    }\n\n    if (!login) fetchData(); // eslint-disable-next-line react-hooks/exhaustive-deps \n  }, [login]); // Setter para el estado email.\n\n  function handleEmail(event) {\n    setEmail(event.target.value);\n  }\n\n  ; // Setter para el estado rol.\n\n  function handleRol(event) {\n    setRol(event.target.value);\n  }\n\n  ; // Funcion utilizada en la interfaz del transportista para cambiar el estado del pedido en el frontend.\n\n  const cambio_estado = (value, id_prod, id_ped) => {\n    let aux = productos.map(producto => {\n      if (producto.id !== id_prod || producto.pedido !== id_ped) {\n        return producto;\n      }\n\n      producto.estado = value;\n      return producto;\n    });\n    setProductos(aux);\n  }; // Funcion utilizada en la interfaz del usuario para cambiar las reseñas del pedido en el frontend.\n\n\n  const cambio_res = (value, id_prod, id_ped, reseña) => {\n    let aux = productos.map(producto => {\n      if (producto.id !== id_prod || producto.pedido !== id_ped) {\n        return producto;\n      }\n\n      switch (reseña) {\n        case \"producto\":\n          producto.res_prod = value;\n          break;\n\n        case \"envio\":\n          producto.res_envio = value;\n          break;\n\n        case \"escrito\":\n          producto.res_esc = value;\n          break;\n\n        default:\n          break;\n      }\n\n      return producto;\n    });\n    setProductos(aux);\n  }; // Funcion que actualiza los campos de un pedido en el backend utilizado tanto en transportista como en reseña.\n\n\n  const putDatos = async (ruta, newData) => {\n    try {\n      const response = await fetch(\"http://localhost:8080\" + ruta, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newData)\n      });\n      const result = await response.json();\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // Funcion que envia nuevos pedidos al backend utilizado en admin.\n\n\n  const enviarDatos = async (ruta, datos) => {\n    console.log(datos);\n\n    try {\n      const response = await fetch(\"http://localhost:8080\" + ruta, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(datos)\n      });\n      const respuesta = await response.json();\n      console.log(respuesta);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // Funcion que envia la posicion actual del transportista al backend utilizado en transportista.\n\n\n  const enviarLocalizacion = async (ruta, posicion) => {\n    try {\n      const response = await fetch(\"http://localhost:8080\" + ruta, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitud: posicion.coords.latitude,\n          longitud: posicion.coords.longitude\n        })\n      });\n      const respuesta = await response.json();\n      console.log(respuesta);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // Renderizado de la página.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: login ? /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      rol: rol,\n      handleEmail: handleEmail,\n      handleRol: handleRol,\n      setLogin: setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"barra\",\n        children: /*#__PURE__*/_jsxDEV(Barra, {\n          email: email,\n          rol: rol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"principal\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: email,\n          rol: rol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), productos && /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cliente/:clienteId\",\n            element: /*#__PURE__*/_jsxDEV(Pedidos, {\n              productos: productos,\n              email: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cliente/:clienteId/:pedidoId\",\n            element: /*#__PURE__*/_jsxDEV(Productos, {\n              productos: productos,\n              email: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cliente/:clienteId/:pedidoId/:productoId\",\n            element: /*#__PURE__*/_jsxDEV(Detalle, {\n              productos: productos,\n              email: email,\n              ubicaciones: ubicaciones,\n              download: download\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/transportista/:matricula\",\n            element: /*#__PURE__*/_jsxDEV(Transportista, {\n              productos: productos,\n              cambio_estado: cambio_estado,\n              actualiza: putDatos,\n              enviarLocalizacion: enviarLocalizacion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cliente/:clienteId/historial\",\n            element: /*#__PURE__*/_jsxDEV(Historial, {\n              productos: productos,\n              email: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cliente/:clienteId/historial/:productoId\",\n            element: /*#__PURE__*/_jsxDEV(Resena, {\n              productos: productos,\n              email: email,\n              cambio_res: cambio_res,\n              actualiza: putDatos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/empresa/:empresaId\",\n            element: /*#__PURE__*/_jsxDEV(Admin, {\n              productos: productos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/empresa/:empresaId/actualizar\",\n            element: /*#__PURE__*/_jsxDEV(Actualizar, {\n              datos: actualizar,\n              setDatos: setActualizar,\n              enviarDatos: enviarDatos,\n              subido: subido,\n              setSubido: setSubido,\n              jsonData: jsonData,\n              setJsonData: setJsonData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"5rJSG/nKerLvDudpqmSbI0GfDHA=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Barra","Pedidos","Productos","Detalle","Transportista","Login","Historial","Resena","Admin","Actualizar","useState","useEffect","Route","Routes","useLocation","mockdata","CONFIG","USE_SERVER","use_server","App","productos","setProductos","ejemplo","ubicaciones","setUbicaciones","login","setLogin","email","setEmail","rol","setRol","actualizar","setActualizar","pedido","nombre","descripcion","cliente","transportista","subido","setSubido","jsonData","setJsonData","location","download","objeto","res","fetch","pathname","data","json","e","console","log","fetchData","handleEmail","event","target","value","handleRol","cambio_estado","id_prod","id_ped","aux","map","producto","id","estado","cambio_res","reseña","res_prod","res_envio","res_esc","putDatos","ruta","newData","response","method","headers","body","JSON","stringify","result","error","enviarDatos","datos","respuesta","enviarLocalizacion","posicion","latitud","coords","latitude","longitud","longitude"],"sources":["C:/Users/javie/Documents/UNI/Proyecto-TRACKING DE PEDIDOS/trackingpedidos/frontend/src/App.js"],"sourcesContent":["import Header from \"./Header\";\r\nimport Barra from \"./Barra.js\";\r\nimport Pedidos from \"./Pedidos\";\r\nimport Productos from \"./Productos\";\r\nimport Detalle from \"./Detalle\";\r\nimport Transportista from \"./Transportista\";\r\nimport Login from \"./Login\";\r\nimport Historial from \"./Historial\";\r\nimport Resena from \"./Resena\";\r\nimport Admin from \"./Admin\";\r\nimport Actualizar from \"./Actualizar\";\r\n\r\n\r\nimport {useState, useEffect} from \"react\";\r\nimport { Route, Routes, useLocation } from \"react-router-dom\";\r\n\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './css/App.css';\r\n\r\nimport { mockdata } from \"./constants/productos\";\r\nimport CONFIG from \"./config/config\";\r\nconst USE_SERVER = CONFIG.use_server;\r\n\r\nfunction App() {\r\n  // Estado donde almacenamos los productos referidos a un usuario.\r\n  const [productos, setProductos] = useState();\r\n\r\n  let ejemplo = [\r\n    {\r\n      \"id\": 1,\r\n      \"latitud\": 80,\r\n      \"longitud\": 40,\r\n      \"matricula\": \"2341AAA\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"latitud\": 70,\r\n      \"longitud\": 40,\r\n      \"matricula\": \"2341AAA\"\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"latitud\": 60,\r\n      \"longitud\": 40,\r\n      \"matricula\": \"2341AAA\"\r\n    }];\r\n  // Estado donde almacenamos los productos referidos a un usuario.\r\n  const [ubicaciones, setUbicaciones] = useState(ejemplo);\r\n\r\n  // Estado utilizado para mostar la pagina login en la ruta por defecto.\r\n  const [login, setLogin] = useState(true);\r\n\r\n  // Estados referidos al nombre del usuario y al rol que tiene dentro de la App.\r\n  const [email, setEmail] = useState('');\r\n  const [rol, setRol] = useState('');\r\n\r\n  // Estado utilizado para la introducción de nuevos pedidos por parte de la empresa.\r\n  const [actualizar, setActualizar] = useState({ pedido: \"\", nombre: \"\", descripcion: \"\", cliente:\"\", transportista:\"\"});\r\n\r\n  // Estado utilizado para mostrar si un archivo se ha subido al introducir pedidos por la empresa.\r\n  const [subido, setSubido] = useState(false);\r\n\r\n  // Estado utilizado para enviar los pedidos de un archivo.\r\n  const [jsonData, setJsonData] = useState(null);\r\n\r\n  // Variable que tiene la localización donde nos encontramos, se utiliza principalmente para saber nuestra ruta actual.\r\n  let location = useLocation();\r\n\r\n  // Funcion para realizar un fetch a los pedidos y guardarlos en el estado productos.\r\n  const download = async (objeto) => {\r\n    if (USE_SERVER){\r\n      try {\r\n        const res = await fetch(\"http://localhost:8080\"+location.pathname);\r\n        const data = await res.json();\r\n        objeto===\"productos\" ?\r\n          setProductos(data)\r\n        :\r\n          setUbicaciones(data);\r\n      } catch (e) {\r\n        console.log(\"No se ha podido recuperar.\");\r\n      }\r\n    }else{\r\n      setProductos(mockdata.productos);\r\n    }\r\n  };\r\n  \r\n  // Hook que ejecuta la funcion download() al quitarse el login.\r\n  useEffect ( () => {\r\n    async function fetchData() {\r\n      await download(\"productos\");\t\r\n    }\r\n    if (!login)\r\n      fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps \r\n  }, [login]);\r\n\r\n  // Setter para el estado email.\r\n  function handleEmail(event) {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  // Setter para el estado rol.\r\n  function handleRol(event) {\r\n    setRol(event.target.value);\r\n  };\r\n\r\n  // Funcion utilizada en la interfaz del transportista para cambiar el estado del pedido en el frontend.\r\n  const cambio_estado = (value, id_prod, id_ped) => {\r\n    let aux = productos.map(producto => {\r\n      if (producto.id !== id_prod || producto.pedido !== id_ped) {\r\n        return producto;\r\n      }\r\n      producto.estado=value;\r\n      return producto;\r\n    })\r\n    setProductos(aux);\r\n  };\r\n\r\n  // Funcion utilizada en la interfaz del usuario para cambiar las reseñas del pedido en el frontend.\r\n  const cambio_res = (value, id_prod, id_ped, reseña) => {\r\n    let aux = productos.map(producto => {\r\n      if (producto.id !== id_prod || producto.pedido !== id_ped) {\r\n        return producto;\r\n      }\r\n\r\n      switch (reseña) {\r\n        case \"producto\":\r\n          producto.res_prod = value;\r\n          break;\r\n        case \"envio\":\r\n          producto.res_envio = value;\r\n          break;\r\n        case \"escrito\":\r\n          producto.res_esc = value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return producto;\r\n    })\r\n    setProductos(aux);\r\n  };\r\n\r\n  // Funcion que actualiza los campos de un pedido en el backend utilizado tanto en transportista como en reseña.\r\n  const putDatos = async (ruta, newData) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080\"+ruta, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newData)\r\n      });\r\n      const result = await response.json();\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Funcion que envia nuevos pedidos al backend utilizado en admin.\r\n  const enviarDatos = async (ruta, datos) => {\r\n    console.log(datos);\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080\" + ruta, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(datos)\r\n      });\r\n      const respuesta = await response.json();\r\n      console.log(respuesta);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Funcion que envia la posicion actual del transportista al backend utilizado en transportista.\r\n  const enviarLocalizacion = async (ruta, posicion) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080\" + ruta, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          latitud: posicion.coords.latitude,\r\n          longitud: posicion.coords.longitude,\r\n        }),\r\n      });\r\n      const respuesta = await response.json();\r\n      console.log(respuesta);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Renderizado de la página.\r\n  return(\r\n  <div className=\"App\">\r\n    {login ? (\r\n      < Login email={email} rol={rol} handleEmail={handleEmail} handleRol={handleRol} setLogin={setLogin} />\r\n    ) : (\r\n      <>\r\n        <div className=\"barra\">\r\n          < Barra email={email} rol={rol} />\r\n        </div>\r\n\r\n        <div className=\"principal\">\r\n          < Header email={email} rol={rol} />\r\n        {productos && < Routes >\r\n          < Route path=\"/cliente/:clienteId\" element= { < Pedidos productos={productos} email={email} /> } />\r\n          < Route path=\"/cliente/:clienteId/:pedidoId\" element= { < Productos productos={productos} email={email} /> } />\r\n          < Route path=\"/cliente/:clienteId/:pedidoId/:productoId\" element= { < Detalle productos={productos} email={email} ubicaciones={ubicaciones} download={download}/> } />\r\n          < Route path=\"/transportista/:matricula\" element= { < Transportista productos={productos} cambio_estado={cambio_estado} actualiza={putDatos} enviarLocalizacion={enviarLocalizacion}/> } />\r\n          < Route path=\"/cliente/:clienteId/historial\" element= { < Historial productos={productos} email={email} /> } />\r\n          < Route path=\"/cliente/:clienteId/historial/:productoId\" element= { < Resena productos={productos} email={email} cambio_res={cambio_res} actualiza={putDatos} /> } />\r\n          < Route path=\"/empresa/:empresaId\" element= { < Admin productos={productos} /> } />\r\n          < Route path=\"/empresa/:empresaId/actualizar\" element= { < Actualizar datos={actualizar} setDatos={setActualizar} enviarDatos={enviarDatos} \r\n              subido={subido} setSubido={setSubido} jsonData={jsonData} setJsonData={setJsonData}/> } />\r\n        </ Routes >\r\n        }      \r\n        </div>\r\n    </>\r\n    )}\r\n  </div>\r\n);\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}